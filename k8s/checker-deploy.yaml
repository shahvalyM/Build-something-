# Deploys the Checker microservice as a Kubernetes Deployment.
# Runs a single replica that checks if password hashes exist in the PostgreSQL breach database.
# Uses secrets for credentials and connects to the 'postgres' service via internal DNS.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checker
  namespace: password-advisor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checker
  template:
    metadata:
      labels:
        app: checker
    spec:
      containers:
      - name: checker
        image: shah10d/checker:v.4 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_HOST
            value: "postgres"    # Internal Kubernetes DNS name of the PostgreSQL service
        envFrom:
          - secretRef:
              name: pg-secret   # Injects POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB from Kubernetes Secret
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 5
